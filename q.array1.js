//? Array
//? Collection of data

//? For statically typed language => c, java, c++
//? Array is collection of data of same type

//? Dynamic language => js,python
//? array => collection of data of any type

// const x = [1, "hello", null, undefined, { name: "Nepal" }];

// console.log(x, typeof x);

//? Real world use case: We use array with same data type

// const temperatureList = [10, 20, 28, 22]; //?array name should always be plural

// console.log(temperatureList);

// const nations = [
//   "Nepal",
//   "Sri lanka",
//   "Netherland",
//   "South Africa",
//   "Bangladesh",
// ];

// console.log(nations);

//? values in array can be accessed using index
//? index always starts from 0

// const laptopBrands = ["Asus", "MSI", "Apple", "Acer", "Dell"];

// console.log(laptopBrands.length);
// console.log(laptopBrands[4]);

// const bakeryItems = [
//   "black forest",
//   "white forrest",
//   "red-velvet",
//   "caramel",
//   "blueberry",
// ];

// for (i = 0; i <= bakeryItems.length - 1; i++) {
//   console.log(bakeryItems[i]);
// }

// const obj = {          //?Object
//   0: "Apple",
//   1: "Banana",
//   2: "Orange",
//   3: "Mango",
// };

// const obj = ["apple","Banana","Orange","Mango"] //?Array (equivalent to the object created above, so datatype of array is object)

// console.log(obj[0]); //?Same result
